INSERTION FUNCTIONS

Name: addShelter(name, zipcode, address, capacity, services, active)
Parameters: string name, int zipcode, string address, int capacity, string services, bool active
Returns: confirmation of insertion with object id

Example: addShelter("Shelter Name", 95110, "Address", 50, "Extra Services", True)


Name: addProvisions(name, zipcode, address, active)
Parameters: string name, int zipcode, string address, bool active
Returns: confirmation of insertion with object id

Example: addProvisions("Location Name", "Address", 95053, False)


Name: addUserInfo(name, zipcode, phoneNum)
Parameters: string name, int zipcode, string phonenumber OR int phonenumber
Returns: confirmation of insertion with object id
Extra Info: phonenumber will be input as a string but will be changed into int

Example: adduserInfo("User Name", 95053, "(123) 456-7890")
Any string input for phonenum will work:
	+1 (800)-234-4321
	(800)23414321
	800-234-4321
	800 234 4321
	8002344321


Name: addImportantItems()
Parameters: string disaster, string items
Returns: confirmation of insertion with object id

Example: addimportantItems("Hurricane", "insurance information, bag with extra provisions")


RETRIEVAL FUNCTIONS

Name: nearbyZipcodes(zipcode)
Parameter: int/string zipcode
Returns: int list of zipcodes within 5 miles radius

Name: getShelters(zipcode, nearby)
Parameter: int zipcode, bool nearby
Returns: a list of dictionary elements with all shelters matching zipcode, if nearby is True then include nearby zipcodes

Example: getShelters(95110, True)

Shelter Structure:
	'Name': name,
	'ZIP': zipcode,
	'Address': address,
	'Capacity': capacity,
	'Services': services,
	'Visitors' : 0,
	'Active': active

Access Example: dict['Name']


Name: getProvisions(zipcode, nearby)
Parameter: int zipcode, bool nearby
Return: a list of dictionary elements with all locations with provisions matching zipcode, if nearby is True then include nearby zipcodes

Example: getProvisions(95053, False)

Provision Structure:
	'Name': name,
	'ZIP': zipcode,
	'Address': address,
	'Visitors' : 0,
	'Active': active
  
  
Name: getUserInfo(phoneNum)
Parameter: string phoneNum
Return: a dict variable of the one user matching the phoneNum

Example getUserInfo("(123) 456-7890")

UserInfo Structure:
	'Name': name,
	'ZIP': zipcode,
	'Phone Number': phoneNum
	

# UPDATE FUNCTIONS

Name: incrShelterVisitors(name)
Parameter: string shelterName
Return: none (visitors++ of given shelter)


Name: clearShelterVisitors(name)
Parameter: string shelterName
Return: none (sets visitors back to 0)


Name: renameShelter(name, newName)
Parameter: string shelterName, string newName
Return: none (changes shelterName)


Name: renameProvisions(name, newName)
Parameter: string provisionsName, string newName
Return: none (changes provisions name)


Name: updateShelterActive(name, active)
Parameter: string name, bool active
Return: none (updates the active variable for the shelter based on user input)

Example: updateShelterActive("Shelter Name", True)


Name: updateProvisionsActive(name, active)
Parameter: string name, bool active
Return: none (updates the active variable for the provision location based on user input)

Example: updateProvisionActive("Location Name", False)
